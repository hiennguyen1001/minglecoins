version: 2
jobs:
  build1:
    docker:
      - image: circleci/android:api-25-alpha
    steps:
      - checkout
      - run: echo 'build'
  test:
    docker:
      - image: circleci/android:api-25-alpha
    steps:
      - checkout
      - run: echo 'test'
workflows:
  version: 2
  build_and_test:
    jobs:
      - build1
      - test

#version: 2
#jobs:
#  accept_library_licenses:
#            docker:
#              - image: circleci/android:api-25-alpha
#            environment:
#              JVM_OPTS: -Xmx4G
#            steps:
#              - checkout
#              - run: cp -r licenses/. $ANDROID_HOME/licenses
#  running_test:
#        docker:
#          - image: circleci/android:api-25-alpha
#        environment:
#          JVM_OPTS: -Xmx4G
#        steps:
#          - restore_cache:
#              key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#          - run:
#             name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
#             command: sudo chmod +x ./gradlew
#          - run:
#              name: Download Dependencies
#              command: ./gradlew androidDependencies
#          - save_cache:
#              paths:
#                - ~/.gradle
#              key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#          - run:
#              name: Run Tests
#              command: ./gradlew lint test
#          - store_test_results:
#                    path: app/build/test-results
#  build_release:
#    docker:
#      - image: circleci/android:api-25-alpha
#    environment:
#      JVM_OPTS: -Xmx4G
#    steps:
#      - restore_cache:
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
#         command: sudo chmod +x ./gradlew
#      - run:
#          name: Download Dependencies
#          command: ./gradlew androidDependencies
#      - save_cache:
#          paths:
#            - ~/.gradle
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#          name: Initial build
#          command: ./gradlew clean assembleRelease --no-daemon --stacktrace
#      - store_artifacts:
#          path: app/build/outputs/apk/
#          destination: apks/
#workflows:
#  version: 2
#  accept_library_licenses_and_running_test:
#    jobs:
#      - accept_library_licenses
#      - running_test:
#        require:
#          - accept_library_licenses
#
##  build_release:
##    jobs:
##      - accept_library_licenses
##      - build_release:
##        require:
##          - accept_library_licenses